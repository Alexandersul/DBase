abandon()
abandonUpdates()
abs()
ABS(<expN>)
ACCESS()
access()
ACOPY(<source array>, <target array>[, <starting element expN> [, <elements expN> [, <target element expN>]]])
ACOS(<expN>)
ActiveX(<container> [,<name expC>])
add(<exp>)
addAlias(<cAlias>,<cDriver>,[<cOptions>])
addPassword(<expC>)
ADEL(<array name>, <position expN> [, <row/column expN>])
ADIR(<array name>[, <filename skeleton expC> [, <file attribute list expC>]])
ADIREXT(<array name>[, <filename skeleton expC> [, <file attribute list expC>]])
ADOCommand()
ADODatabase()
ADODataShape()
ADOException()
ADOField()
ADOParameter()
ADOPersist()
ADOQuery()
ADOStoredProc()
ADOStream()
ADOTable()
ADOTableDef()
ADOUpdateSet()
advise(<item expC>)
AELEMENT(<array name>, <subscript1 expN>[, <subscript2 expN>])
AFIELDS(<array name>)
AFILL(<array name>, <exp>[, <start expN> [, <count expN>]])
agAverage(<codeblock>)
agCount(<codeblock>)
agMax(<codeblock>)
agMin(<codeblock>)
AGROW (<array name>, <expN>)
agStdDeviation(<codeblock>)
agSum(<codeblock>)
agVariance(<codeblock>)
AINS(<array name>, <position expN> [, <row/column expN>])
ALEN(<array> [, <expN>])
ALIAS([<alias>])
ANSI(<expC>)
append()
appendUpdate()
applyFilter()
applyLocate([<SQL condition expC>])
applyUpdates()
ARESIZE(<array name>, <new rows expN>[,<new cols expN> [, <retain values expN>]])
ARGCOUNT()
ARGVECTOR(<parameter expN>)
Array([<dim1 expN> [,<dim2 expN>...]])
ASC(<expC>)
ASCAN(<array name>, <exp>[, <starting element expN> [, <elements expN>]])
asin(<sin expN>)
ASIN(<expN>)
ASORT(<array name>[, <starting element expN> [,<elements to sort expN>[, <sort order expN>]]])
AssocArray()
ASUBSCRIPT(<array name>, <element expN>, <row/column expN>)
AT(<search expC>, <target expC> [, <nth occurrence expN>])
atan(<tan expN>)
ATAN(<expN>)
atFirst()
atLast()
ATN2(<sine expN>, <cosine expN>)
Band()
beginAppend()
beginEdit()
beginFilter()
beginLocate()
beginTrans()
BEGINTRANS([<database name expC> [,<isolation level expN>]])
BINTYPE([<field name>])
BITAND(<expN1>, <expN2>)
BITLSHIFT(<int expN>, <shift expN>)
BITNOT(<expN>)
BITOR(<expN1>, <expN2>)
BITRSHIFT(<int expN>, <shift expN>)
BITSET(<int expN>, <bit expN>)
BITXOR(<expN1>, <expN2>)
BITZRSHIFT(<int expN>, <shift expN>)
BOF([<alias>])
bookmark()
BOOKMARK([<alias>])
Browse()
cancel()
CDOW(<expD>)
CEILING(<expN>)
CENTER(<expC> [, <length expN> [, <pad expC> ]])
CERROR()
charAt(<expN>)
CHARSET([<alias>])
CheckBox(<container> [,<name expC>])
CHOOSEPRINTER([<title expC>][, <expL>])
CHR(<expN>)
clear()
clearFilter()
clearRange()
close()
close([expX])
CMONTH(<expD>)
ComboBox(<container> [,<name expC>])
commit()
COMMIT([<database name expC>])
Container(<container> [,<name expC>])
copy()
copyTable(<source table expC>, <destination table expC>)
COS(<expN>)
count()
create(<filename expC>[, <access expC>])
createDate(<filename expC>)
createIndex (<tablename expC>,<oRef>)
createTime(<filename expC>)
CTOD(<expC>)
CTODT(<expC>)
CTOT(<expC>)
Database()
DataModRef()
DataModule()
DATE()
Date()
date(<filename expC>)
DATETIME()
DAY(<expD>)
DBERROR()
DbException()
DBF([<alias>])
DbfIndex( <indexname expC>,<expression expC> )
DBMESSAGE()
DDELink()
DDETopic(<topic expC>)
delete()
delete(<filename expC> [, <recycle expL>])
delete(<position expN> [, <row/column expN>])
deleteAlias(<cAlias>)
DELETED([<alias>])
DESCENDING([<.mdx filename expC>,] [<index position expN> [,<alias>]])
Designer( [<object>] [,<filename expC>] )
DIFFERENCE(<expC1>, <expC2>)
dir([<filename skeleton expC> [, <DOS file attribute list expC>]])
dirExt([<filename skeleton expC> [, <file attribute list expC>]])
DISKSPACE([<drive expN>])
DMY(<expD>)
DOW(<expD>)
dropIndex (<tablename expC>,<indexName expC>)
dropTable(<table name expC>)
DTOC(<expD>)
DTODT(<expD>)
DTOR(<expN>)
DTOS(<expD>)
DTTOC(<dtVar>)
DTTOD(<dtVar>)
DTTOT(<dtVar>)
Editor(<container> [,<name expC>])
ELAPSED(<stop time expC>, <start time expC> [, <exp>])
element(<subscript1 expN> [, <subscript2 expN>])
EMPTY(<exp>)
emptyTable(<table name expC>)
Entryfield(<container> [,<name expC>])
Enumerate(<oRef>)
eof()
EOF([<alias>])
ERROR()
Exception()
execute()
execute(<cmd expC>)
executeMessages()
executeSQL(<SQL expC>)
exists(<filename expC>)
exp()
EXP(<expN>)
FDECIMAL(<field number expN> [, <alias>])
FIELD(<field number expN> [, <alias>])
File()
FILE(<filename expC>)
fill(<exp> [, <start expN> [, <count expN>]])
FINDINSTANCE(<classname expC> [, <previous oRef>])
findKey(<exp> | <exp list>)
findKeyNearest(<exp> | <exp list>)
first()
FLDCOUNT([<alias>])
FLDLIST([<field number expN>])
FLENGTH(<field number expN> [, <alias>])
FLOCK([<alias>])
FLOOR(<expN>)
flush()
FNAMEMAX( [<expC>] )
FOR([<.mdx filename expC>,] [<index position expN> [,<alias>]])
Form()
FOUND([<alias>])
FUNIQUE([<expC>])
FV(<payment expN>, <interest expN>, <term expN>)
getByte(<index expN>)
GETCALLADDRESS([<expC>][<expF>])
GETCOLOR([<title expC>])
getColumnObject(<expN> )
getColumnOrder()
getDate()
getDay()
GETDIRECTORY([<directory expC>])
GETENV(<expC>)
getFile([<filename skeleton expC> [, <title expC> [, <suppress database expL>], [<file types list expC> | <group file name expC> (<file types list expC>)]]])
GETFILE([<filename skeleton expC>[, <title expC>[, <suppress database expL>],[<file types list expC> | <file type group name expC> (<file types list expC>)]]])
GETFONT([<title expC>[, <fontstr expC>]])
getHours()
getMinutes()
getMonth()
getSchema(<item expC>)
getSeconds()
getTime()
getTimezoneOffset()
getYear()
goto(<bookmark>)
Grid(<container> [,<name expC>])
GridColumn(<grid>)
Group(<streamSource>)
grow(<expN>)
HOME()
HTOI(<expC>)
ID()
IIF(<expL>, <exp1>, <exp2>)
Image(<container> [,<name expC>])
Index()
indexOf(<search expC> [, <from index expN>])
initiate(<server expC>, <topic expC>)
INKEY([<seconds expN>] [, <mouse expC>])
insert(<position expN> [, <row/column expN>])
INSPECT(<oRef>)
int(<expN>)
isAlpha()
ISALPHA(<expC>)
ISBLANK(<exp>)
isInherited(<oRef2>)
isKey(<expC>)
isLower()
ISLOWER(<expC>)
ISTABLE(<filename>)
isUpper()
ISUPPER(<expC>)
ITOH(<int expN> [, <chars expN>])
KEY([<.mdx filename>,] [<index position expN> [,<alias>]])
KEYMATCH(<exp> [,<index number> [,<alias>]])
last()
lastIndexOf(<search expC> [, <from index expN>])
LDRIVER([<alias>])
LEFT(<expC>, <expN>)
LEN(<expC>)
LENNUM(<expN>)
LIKE(<skeleton expC>, <expC>)
Line()
LINENO()
ListBox(<container> [,<name expC>])
LKSYS(<expN>)
load()
locateNext([<rows expN>])
LOCK([<record list expC>,<alias>] | [<alias>])
lockRow()
lockSet()
log(<expN>)
LOG10(<expN>)
login(<group name expC>, <user name expC>, <password expC>)
LOOKUP(<return field>, <exp>, <lookup field>)
LOWER(<expC>)
LTRIM(<expC>)
LUPDATE([<alias>])
Math()
MAX(<exp1>, <exp2>)
MDX([<mdx expN>[, <alias>]])
MDY(<expD>)
MEMLINES(<memo field> [,<line length expN>])
MEMORY([<expN>])
Menu(<parent>)
MenuBar(<parent> [, <name expC>])
MESSAGE()
MIN(<exp1>, <exp2>)
MLINE(<memo field> [, <line number expN > [, <line length expN>]])
mod(<denominator expN>)
MOD(<dividend expN>, <divisor expN>)
MONTH(<expD>)
MSGBOX(<message expC>, [<title expC>, [<box type expN>]])
NDX([<ndx expN> [, <alias>]])
NETWORK()
next([<rows expN>])
NEXTKEY([<expN>])
NoteBook(<container> [,<name expC>])
notify(<item expC>)
Number([<nNumber expN>])
NumberException()
Object()
OEM(<expC>)
OLE(<container> [,<name expC>])
OleAutoClient(<server expC>)
open()
open(<filename expC>[, <access expC>])
ORDER([<alias>])
OS()
packTable(<table name expC>)
PageTemplate(<report>)
PaintBox(<container> [,<name expC>])
parse(<date expC>)
PAYMENT(<principal expN>, <interest expN>, <term expN>)
PCOL()
PCOUNT()
peek(<item expC>)
PI()
pi()
poke(<item expC>, <value expC>)
Popup(<parent> [, <name expC>])
prepare()
print([<dialog expL>[, <mode expL>]])
PRINTSTATUS([<port name expC>])
PROCREFCOUNT(<procedure file expC>)
PROGRAM([<expN>])
Progress(<container> [,<name expC>])
PROPER(<expC>)
PROW()
PushButton(<container> [,<name expC>])
PUTFILE([<title expC>[, <filename expC>[, <extension expC>[, <suppress database expL>>],[<file types list expC> | <file group name expC> (<file types list expC>)]]]])
puts(<string expC> [, <characters expN> [, <end-of-line expC>]])
PV(<payment expN>, <interest expN>, <term expN>)
Query()
RadioButton(<container> [,<name expC>])
RANDOM([<expN>])
RAT(<search expC>, <target expC> [, <nth occurrence expN>])
read(<characters expN>)
readln([<characters expN> [, <end-of-line expC>]])
RECCOUNT([<alias>])
RECNO([<alias>])
reconnect()
RECSIZE([<alias>])
Rectangle(<container> [,<name expC>])
REFCOUNT(<oRef>)
refresh()
reindex(<table name expC>)
RELATION(<expN> [,<alias>])
release()
removeAll()
removeKey(<key expC>)
rename(<filename expC>, <new name expC>)
renameTable(<old name expC>, <new name expC>)
replaceFromFile(<file name expC> [,<append expL>])
replicate(<expC> [, <expN>])
REPLICATE(<expC>, <expN>)
Report()
ReportViewer(<container> [,<name expC>])
requery()
resize(<rows expN> [,<cols expN> [, <retain values expN>]])
RESOURCE(<resource id>, <DLL filename expC>)
RIGHT(<expC>, <expN>)
right(<expN>)
RLOCK([<list expC>, <alias>] | [<alias>])
rollback()
ROLLBACK([<database name expC>])
ROUND(<expN 1> , <expN 2>)
round(<nRoundDecimalPlace>)
rowcount()
rowno()
Rowset()
RTOD(<expN>)
RTRIM(<expC>)
RUN([<direct expL>,] <command expC>)
save()
scan(<exp> [, <starting element expN> [, <elements expN>]])
scroll(<horizontal expN>,<vertical expN> )
ScrollBar(<container> [,<name expC>])
seconds()
seek(<offset expN> [, <position expN>])
SELECT([<alias>])
Session()
SET(<expC> [,<expN>])
setByte(<index expN>, <value expN>)
setDate(<expN>)
setHours(<expN>)
setMinutes(<expN>)
setMonth(<expN>)
setRange(<startKey exp> [, <endKey exp>])
setSeconds(<expN>)
setTime(<expN>)
SETTO(<expC> [,<expN>])
setYear(<expN>)
Shape(<container> [,<name expC>])
SHELL([<expL1>, [<expL2>]])
shortName(<filename expC>)
SIGN(<expN>)
SIN(<expN>)
size(<filename expC>)
Slider(<container> [,<name expC>])
sort([<starting element expN> [,<elements to sort expN> [, <sort order expN>]]])
SOUNDEX(<expC>)
SpinBox(<container> [,<name expC>])
SQLERROR()
SQLEXEC(<SQL statement expC> [,<Answer table expC>])
SQLMESSAGE()
SQRT(<expN>)
StoredProc()
STR(<expN> [, <length expN> [, <decimals expN> [, <expC>]]])
StreamFrame(<pageTemplate>)
StreamSource(<report>)
String()
stuff(<start expN>, <quantity expN> [, <replacement expC>])
STUFF(<target expC>, <start expN>, <quantity expN>, <replacement expC>)
SubForm(<parent oRef>[<title expC>])
subscript(<element expN>, <row/column expN>)
SUBSTR(<expC>, <start expN> [, <length expN>])
substring(<index1 expN>, <index2 expN>)
TabBox(<container> [,<name expC>])
TableDef()
tableExists(<table name expC>)
TAG([<.mdx filename expC>,] [<index number expN> [,<alias>]])
TAGCOUNT([<.mdx filename> [,<alias>]])
TAGNO([<tag name expC> [,<.mdx filename expC> [,<alias>]]])
TAN(<expN>)
TARGET(<expN> [,<alias>])
terminate()
Text(<container> [,<name expC>])
TextLabel(<container> [,<name expC>])
Timer()
toGMTString()
toLocaleString()
toLowerCase()
ToolBar()
ToolButton()
toString()
toUpperCase()
TRANSFORM(<exp>, <picture expC>)
TreeItem(<parent> [,<name expC>])
TreeView(<container> [,<name expC>])
TRIM(<expC>)
TTIME()
TTOC(<tVar>)
TYPE(<expC>)
unadvise(<item expC>)
UNIQUE([<.mdx filename expC>,] [<index position expN> [,<alias>]])
unlock()
update()
UpdateSet()
UPPER(<expC>)
USER()
utc(<year expN>, <month expN>, <day expN> [, <hours expN> [, <minutes expN> [, <seconds expN>]]])
VAL(<expC>)
VALIDDRIVE(<drive expC>)
VERSION([<expN>])
WORKAREA()
write(<expC> [, <characters expN>])
writeln(<string expC> [, <characters expN> [, <end-of-line expC>]])
YEAR(<expD>)
